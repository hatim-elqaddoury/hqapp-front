{"version":3,"file":"is-granted.directive.js","sourceRoot":"","sources":["../../../../../.ng_build/security/directives/is-granted.directive.ts"],"names":[],"mappings":";;;;;;;;;AAAA,OAAO,EAAE,SAAS,EAAE,KAAK,EAAa,WAAW,EAAE,gBAAgB,EAAE,MAAM,eAAe,CAAC;AAC3F,OAAO,EAAE,SAAS,EAAE,MAAM,gBAAgB,CAAC;AAE3C,OAAO,EAAE,eAAe,EAAE,MAAM,oCAAoC,CAAC;AAGrE,IAAa,oBAAoB,GAAjC,MAAa,oBAAoB;IAK/B,YAAoB,WAA6B,EAC7B,aAA+B,EAC/B,aAA8B;QAF9B,gBAAW,GAAX,WAAW,CAAkB;QAC7B,kBAAa,GAAb,aAAa,CAAkB;QAC/B,kBAAa,GAAb,aAAa,CAAiB;QAL1C,UAAK,GAAG,IAAI,CAAC;QACb,YAAO,GAAG,KAAK,CAAC;IAKxB,CAAC;IAEQ,IAAI,WAAW,CAAC,CAAC,UAAU,EAAE,QAAQ,CAAmB;QAE/D,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,UAAU,EAAE,QAAQ,CAAC;aAC/C,IAAI,CACH,SAAS,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAC5B;aACA,SAAS,CAAC,CAAC,GAAY,EAAE,EAAE;YAC1B,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;gBACxB,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;gBACxD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;aACrB;iBAAM,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,OAAO,EAAE;gBAC/B,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;gBAC3B,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;aACtB;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IAED,WAAW;QACT,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACrB,CAAC;CACF,CAAA;AApBU;IAAR,KAAK,EAAE;;;uDAeP;AAzBU,oBAAoB;IADhC,SAAS,CAAC,EAAE,QAAQ,EAAE,eAAe,EAAC,CAAC;qCAML,WAAW;QACT,gBAAgB;QAChB,eAAe;GAPvC,oBAAoB,CA8BhC;SA9BY,oBAAoB","sourcesContent":["import { Directive, Input, OnDestroy, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { takeWhile } from 'rxjs/operators';\n\nimport { NbAccessChecker } from '../services/access-checker.service';\n\n@Directive({ selector: '[nbIsGranted]'})\nexport class NbIsGrantedDirective implements OnDestroy {\n\n  private alive = true;\n  private hasView = false;\n\n  constructor(private templateRef: TemplateRef<any>,\n              private viewContainer: ViewContainerRef,\n              private accessChecker: NbAccessChecker) {\n  }\n\n  @Input() set nbIsGranted([permission, resource]: [string, string]) {\n\n    this.accessChecker.isGranted(permission, resource)\n      .pipe(\n        takeWhile(() => this.alive),\n      )\n      .subscribe((can: boolean) => {\n        if (can && !this.hasView) {\n          this.viewContainer.createEmbeddedView(this.templateRef);\n          this.hasView = true;\n        } else if (!can && this.hasView) {\n          this.viewContainer.clear();\n          this.hasView = false;\n        }\n      });\n  }\n\n  ngOnDestroy() {\n    this.alive = false;\n  }\n}\n"]}