{"version":3,"file":"spinner.component.js","sourceRoot":"","sources":["../../../../../../.ng_build/theme/components/spinner/spinner.component.ts"],"names":[],"mappings":"AAAA;;;;GAIG;;;;;;;;;;AAEH,OAAO,EAAE,SAAS,EAAE,WAAW,EAAE,KAAK,EAAE,MAAM,eAAe,CAAC;AAK9D;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA4BG;AASH,IAAa,kBAAkB,GAA/B,MAAa,kBAAkB;IArC/B;;;;;;;;;;;;;;;;;;;;;;;;;;;;OA4BG;IACH;QAUE;;;WAGG;QAEH,YAAO,GAAW,YAAY,CAAC;QAE/B;;;;WAIG;QAEH,SAAI,GAAoB,QAAQ,CAAC;IA0DnC,CAAC;IAhDC,IAAI,IAAI;QACN,OAAO,IAAI,CAAC,IAAI,KAAK,MAAM,CAAC;IAC9B,CAAC;IAGD,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,IAAI,KAAK,OAAO,CAAC;IAC/B,CAAC;IAGD,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,IAAI,KAAK,QAAQ,CAAC;IAChC,CAAC;IAGD,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,IAAI,KAAK,OAAO,CAAC;IAC/B,CAAC;IAGD,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,IAAI,KAAK,OAAO,CAAC;IAC/B,CAAC;IAGD,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,MAAM,KAAK,SAAS,CAAC;IACnC,CAAC;IAGD,IAAI,IAAI;QACN,OAAO,IAAI,CAAC,MAAM,KAAK,MAAM,CAAC;IAChC,CAAC;IAGD,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,MAAM,KAAK,SAAS,CAAC;IACnC,CAAC;IAGD,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,MAAM,KAAK,SAAS,CAAC;IACnC,CAAC;IAGD,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,MAAM,KAAK,QAAQ,CAAC;IAClC,CAAC;CACF,CAAA;AAlEC;IADC,KAAK,EAAE;;mDACuB;AAQ/B;IADC,KAAK,EAAE;;gDACyB;AAOjC;IADC,KAAK,EAAE;;kDACuB;AAG/B;IADC,WAAW,CAAC,iBAAiB,CAAC;;;8CAG9B;AAGD;IADC,WAAW,CAAC,kBAAkB,CAAC;;;+CAG/B;AAGD;IADC,WAAW,CAAC,mBAAmB,CAAC;;;gDAGhC;AAGD;IADC,WAAW,CAAC,kBAAkB,CAAC;;;+CAG/B;AAGD;IADC,WAAW,CAAC,kBAAkB,CAAC;;;+CAG/B;AAGD;IADC,WAAW,CAAC,sBAAsB,CAAC;;;iDAGnC;AAGD;IADC,WAAW,CAAC,mBAAmB,CAAC;;;8CAGhC;AAGD;IADC,WAAW,CAAC,sBAAsB,CAAC;;;iDAGnC;AAGD;IADC,WAAW,CAAC,sBAAsB,CAAC;;;iDAGnC;AAGD;IADC,WAAW,CAAC,qBAAqB,CAAC;;;gDAGlC;AAxEU,kBAAkB;IAR9B,SAAS,CAAC;QACT,QAAQ,EAAE,YAAY;QACtB,QAAQ,EAAE;;;GAGT;;KAEF,CAAC;GACW,kBAAkB,CAyE9B;SAzEY,kBAAkB","sourcesContent":["/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport { Component, HostBinding, Input } from '@angular/core';\n\nimport { NbComponentSize } from '../component-size';\nimport { NbComponentStatus } from '../component-status';\n\n/**\n * Styled spinner component\n *\n * @styles\n *\n * spinner-background-color:\n * spinner-circle-filled-color:\n * spinner-circle-empty-color:\n * spinner-text-color:\n * spinner-text-font-family:\n * spinner-text-font-size:\n * spinner-text-font-weight:\n * spinner-text-line-height:\n * spinner-primary-circle-filled-color:\n * spinner-primary-circle-empty-color:\n * spinner-info-circle-filled-color:\n * spinner-info-circle-empty-color:\n * spinner-success-circle-filled-color:\n * spinner-success-circle-empty-color:\n * spinner-warning-circle-filled-color:\n * spinner-warning-circle-empty-color:\n * spinner-danger-circle-filled-color:\n * spinner-danger-circle-empty-color:\n * spinner-height-tiny:\n * spinner-height-small:\n * spinner-height-medium:\n * spinner-height-large:\n * spinner-height-giant:\n */\n@Component({\n  selector: 'nb-spinner',\n  template: `\n    <span class=\"spin-circle\"></span>\n    <span class=\"message\" *ngIf=\"message\">{{ message }}</span>\n  `,\n  styleUrls: ['./spinner.component.css'],\n})\nexport class NbSpinnerComponent {\n\n  /**\n   * Loading text that is shown near the icon\n   * @type string\n   */\n  @Input()\n  message: string = 'Loading...';\n\n  /**\n   * Spinner size, available sizes:\n   * tiny, small, medium, large, giant\n   * @param {string} value\n   */\n  @Input()\n  size: NbComponentSize = 'medium';\n\n  /**\n   * Spinner status (adds specific styles):\n   * primary, info, success, warning, danger\n   */\n  @Input()\n  status: '' | NbComponentStatus;\n\n  @HostBinding('class.size-tiny')\n  get tiny() {\n    return this.size === 'tiny';\n  }\n\n  @HostBinding('class.size-small')\n  get small() {\n    return this.size === 'small';\n  }\n\n  @HostBinding('class.size-medium')\n  get medium() {\n    return this.size === 'medium';\n  }\n\n  @HostBinding('class.size-large')\n  get large() {\n    return this.size === 'large';\n  }\n\n  @HostBinding('class.size-giant')\n  get giant() {\n    return this.size === 'giant';\n  }\n\n  @HostBinding('class.status-primary')\n  get primary() {\n    return this.status === 'primary';\n  }\n\n  @HostBinding('class.status-info')\n  get info() {\n    return this.status === 'info';\n  }\n\n  @HostBinding('class.status-success')\n  get success() {\n    return this.status === 'success';\n  }\n\n  @HostBinding('class.status-warning')\n  get warning() {\n    return this.status === 'warning';\n  }\n\n  @HostBinding('class.status-danger')\n  get danger() {\n    return this.status === 'danger';\n  }\n}\n"]}