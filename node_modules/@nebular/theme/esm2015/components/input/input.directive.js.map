{"version":3,"file":"input.directive.js","sourceRoot":"","sources":["../../../../../../.ng_build/theme/components/input/input.directive.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport { Directive, Input, HostBinding } from '@angular/core';\n\nimport { convertToBoolProperty } from '../helpers';\nimport { NbComponentSize } from '../component-size';\nimport { NbComponentShape } from '../component-shape';\nimport { NbComponentStatus } from '../component-status';\n\n/**\n * Basic input directive.\n *\n * ```html\n * <input nbInput></input>\n * ```\n *\n * ### Installation\n *\n * Import `NbInputModule` to your feature module.\n * ```ts\n * @NgModule({\n *   imports: [\n *     // ...\n *     NbInputModule,\n *   ],\n * })\n * export class PageModule { }\n * ```\n * ### Usage\n *\n * Default input size is `medium`:\n * @stacked-example(Showcase, input/input-showcase.component)\n *\n * Inputs are available in multiple colors using `status` property:\n * @stacked-example(Input Colors, input/input-colors.component)\n *\n * There are three input sizes:\n *\n * @stacked-example(Input Sizes, input/input-sizes.component)\n *\n * Inputs available in different shapes, which could be combined with the other properties:\n * @stacked-example(Input Shapes, input/input-shapes.component)\n *\n * `nbInput` could be applied to the following selectors - `input`, `textarea`:\n * @stacked-example(Input Elements, input/input-types.component)\n *\n * You can add `fullWidth` attribute to make element fill container:\n * @stacked-example(Full width inputs, input/input-full-width.component)\n *\n * Or you can bind control with form controls or ngModel:\n * @stacked-example(Input form binding, input/input-form.component)\n *\n * @styles\n *\n * input-background-color:\n * input-border-style:\n * input-border-width:\n * input-outline-color:\n * input-outline-width:\n * input-placeholder-text-color:\n * input-placeholder-text-font-family:\n * input-text-color:\n * input-text-font-family:\n * input-border-color:\n * input-focus-border-color:\n * input-hover-border-color:\n * input-disabled-border-color:\n * input-disabled-background-color:\n * input-disabled-text-color:\n * input-disabled-placeholder-text-color:\n * input-primary-border-color:\n * input-primary-focus-border-color:\n * input-primary-hover-border-color:\n * input-success-border-color:\n * input-success-focus-border-color:\n * input-success-hover-border-color:\n * input-info-border-color:\n * input-info-focus-border-color:\n * input-info-hover-border-color:\n * input-warning-border-color:\n * input-warning-focus-border-color:\n * input-warning-hover-border-color:\n * input-danger-border-color:\n * input-danger-focus-border-color:\n * input-danger-hover-border-color:\n * input-rectangle-border-radius:\n * input-semi-round-border-radius:\n * input-round-border-radius:\n * input-tiny-text-font-size:\n * input-tiny-text-font-weight:\n * input-tiny-text-line-height:\n * input-tiny-placeholder-text-font-size:\n * input-tiny-placeholder-text-font-weight:\n * input-tiny-placeholder-text-line-height:\n * input-tiny-padding:\n * input-tiny-max-width:\n * input-small-text-font-size:\n * input-small-text-font-weight:\n * input-small-text-line-height:\n * input-small-placeholder-text-font-size:\n * input-small-placeholder-text-font-weight:\n * input-small-placeholder-text-line-height:\n * input-small-padding:\n * input-small-max-width:\n * input-medium-text-font-size:\n * input-medium-text-font-weight:\n * input-medium-text-line-height:\n * input-medium-placeholder-text-font-size:\n * input-medium-placeholder-text-font-weight:\n * input-medium-placeholder-text-line-height:\n * input-medium-padding:\n * input-medium-max-width:\n * input-large-text-font-size:\n * input-large-text-font-weight:\n * input-large-text-line-height:\n * input-large-placeholder-text-font-size:\n * input-large-placeholder-text-font-weight:\n * input-large-placeholder-text-line-height:\n * input-large-padding:\n * input-large-max-width:\n * input-giant-text-font-size:\n * input-giant-text-font-weight:\n * input-giant-text-line-height:\n * input-giant-placeholder-text-font-size:\n * input-giant-placeholder-text-font-weight:\n * input-giant-placeholder-text-line-height:\n * input-giant-padding:\n * input-giant-max-width:\n */\n@Directive({\n  selector: 'input[nbInput],textarea[nbInput]',\n})\nexport class NbInputDirective {\n\n  /**\n   * Field size modifications. Possible values: `small`, `medium` (default), `large`.\n   */\n  @Input()\n  fieldSize: NbComponentSize = 'medium';\n\n  /**\n   * Field status (adds specific styles):\n   * `primary`, `info`, `success`, `warning`, `danger`\n   */\n  @Input()\n  status: '' | NbComponentStatus = '';\n\n  /**\n   * Field shapes modifications. Possible values: `rectangle` (default), `round`, `semi-round`.\n   */\n  @Input()\n  shape: NbComponentShape = 'rectangle';\n\n  /**\n   * If set element will fill container. `false` by default.\n   */\n  @Input()\n  @HostBinding('class.input-full-width')\n  get fullWidth(): boolean {\n    return this._fullWidth;\n  }\n  set fullWidth(value: boolean) {\n    this._fullWidth = convertToBoolProperty(value);\n  }\n  private _fullWidth = false;\n\n  @HostBinding('class.size-tiny')\n  get tiny() {\n    return this.fieldSize === 'tiny';\n  }\n\n  @HostBinding('class.size-small')\n  get small() {\n    return this.fieldSize === 'small';\n  }\n\n  @HostBinding('class.size-medium')\n  get medium() {\n    return this.fieldSize === 'medium';\n  }\n\n  @HostBinding('class.size-large')\n  get large() {\n    return this.fieldSize === 'large';\n  }\n\n  @HostBinding('class.size-giant')\n  get giant() {\n    return this.fieldSize === 'giant';\n  }\n\n  @HostBinding('class.status-primary')\n  get primary() {\n    return this.status === 'primary';\n  }\n\n  @HostBinding('class.status-info')\n  get info() {\n    return this.status === 'info';\n  }\n\n  @HostBinding('class.status-success')\n  get success() {\n    return this.status === 'success';\n  }\n\n  @HostBinding('class.status-warning')\n  get warning() {\n    return this.status === 'warning';\n  }\n\n  @HostBinding('class.status-danger')\n  get danger() {\n    return this.status === 'danger';\n  }\n\n  @HostBinding('class.shape-rectangle')\n  get rectangle() {\n    return this.shape === 'rectangle';\n  }\n\n  @HostBinding('class.shape-semi-round')\n  get semiRound() {\n    return this.shape === 'semi-round';\n  }\n\n  @HostBinding('class.shape-round')\n  get round() {\n    return this.shape === 'round';\n  }\n}\n"]}